package me.moomoo.anarchyexploitfixes.modules.preventions.withers;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.World;
import org.bukkit.entity.WitherSkull;

public class RemoveAllSkullsPeriodically implements AnarchyExploitFixesModule, Runnable {

    private final AnarchyExploitFixes plugin;
    private final long checkPeriod;

    public RemoveAllSkullsPeriodically() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("preventions.withers.remove-flying-wither-skulls.periodically-remove-all-flying-skulls", "Enable if a lot of wither skulls at spawn are causing lag.");
        this.checkPeriod = config.getInt("preventions.withers.remove-flying-wither-skulls.periodically-remove-all-flying-skulls.check-period-in-ticks", 80);
    }

    @Override
    public String name() {
        return "remove-all-flying-skulls";
    }

    @Override
    public String category() {
        return "preventions";
    }

    @Override
    public void enable() {
        plugin.getServer().getScheduler().scheduleSyncRepeatingTask(plugin, this, 20L, checkPeriod);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("preventions.withers.remove-flying-wither-skulls.remove-all-flying-skulls", false);
    }

    @Override
    public void run() {
        for (World world : plugin.getServer().getWorlds()) {
            for (WitherSkull witherSkull : world.getEntitiesByClass(WitherSkull.class)) {
                witherSkull.remove();
            }
        }
    }
}
