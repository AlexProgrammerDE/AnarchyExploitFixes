package me.moomoo.anarchyexploitfixes.modules.chat.commandwhitelist;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.entity.Player;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;

import static me.moomoo.anarchyexploitfixes.utils.CommandUtil.getCommandLabel;

public class CWTabCompletePacketListener extends PacketAdapter {

    /*
     *     Credits go to japflap (https://www.spigotmc.org/resources/commandwhitelist.2452/)
     *     Code was mainly only implemented into AEF by xGinko.
     */

    private final ProtocolManager protocolManager;
    private final HashSet<String> allowedCommands;

    protected CWTabCompletePacketListener(AnarchyExploitFixes plugin, HashSet<String> allowedCommands) {
        super(plugin, ListenerPriority.HIGHEST, PacketType.Play.Client.TAB_COMPLETE);
        this.protocolManager = ProtocolLibrary.getProtocolManager();
        this.allowedCommands = allowedCommands;
    }

    protected void register() {
        protocolManager.addPacketListener(this);
    }

    @Override
    public void onPacketReceiving(PacketEvent event) {
        String buffer = event.getPacket().getStrings().read(0);
        if (!buffer.startsWith("/")) return;

        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.commandwhitelistbypass")) return;

        if (!buffer.contains(" ")) {
            protocolManager.sendServerPacket(player, getFilteredTabCompletePacket(buffer));
            event.setCancelled(true);
        }

        else if (!allowedCommands.contains(getCommandLabel(buffer).toLowerCase())) {
            event.setCancelled(true);
        }
    }

    private PacketContainer getFilteredTabCompletePacket(String buffer) {
        String command = buffer.split(" ")[0].substring(1).toLowerCase();
        List<String> newCompletions = new ArrayList<>();
        for (String whitelistedCommand : allowedCommands) {
            if (whitelistedCommand.startsWith(command)) {
                newCompletions.add("/" + whitelistedCommand);
            }
        }
        PacketContainer filteredTabCompletions = new PacketContainer(PacketType.Play.Server.TAB_COMPLETE);
        filteredTabCompletions.getStringArrays().write(0, newCompletions.toArray(new String[newCompletions.size()]));
        return filteredTabCompletions;
    }
}
