package me.moomoo.anarchyexploitfixes.commands;

import cloud.commandframework.annotations.CommandDescription;
import cloud.commandframework.annotations.CommandMethod;
import cloud.commandframework.annotations.CommandPermission;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public class ToggleConnectionMsgsCommand implements AnarchyExploitFixesCommand {
    @Override
    public boolean shouldRegister() {
        return AnarchyExploitFixes.getConfiguration().cmd_toggleConMsgs_enabled;
    }

    @CommandMethod("toggleconnectionmsgs")
    @CommandPermission("anarchyexploitfixes.cmd.toggleconnectionmsgs")
    @CommandDescription("Toggle connection messages on or off")
    public void onConMsgToggle(final CommandSender sender) {
        if (!(sender instanceof Player)) {
            sender.sendMessage(ChatColor.RED+"Only players can execute this command.");
            return;
        }

        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        Player player = (Player) sender;

        if (plugin.CONNECTION_MSG_TOGGLE.contains(player.getUniqueId())) {
            plugin.CONNECTION_MSG_TOGGLE.remove(player.getUniqueId());

            if (AnarchyExploitFixes.getConfiguration().connectionMsgsAreOnByDefault) {
                sender.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).misc_enabledConnectionMsgs);
            } else {
                sender.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).misc_disabledConnectionMsgs);
            }
        } else {
            plugin.CONNECTION_MSG_TOGGLE.add(player.getUniqueId());

            if (AnarchyExploitFixes.getConfiguration().connectionMsgsAreOnByDefault) {
                sender.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).misc_disabledConnectionMsgs);
            } else {
                sender.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).misc_enabledConnectionMsgs);
            }
        }
    }
}