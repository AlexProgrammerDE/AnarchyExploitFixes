package me.moomoo.anarchyexploitfixes.utils.models;

import com.github.benmanes.caffeine.cache.Cache;
import com.github.benmanes.caffeine.cache.Caffeine;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.Server;

import java.time.Duration;

public final class TPSCache {

    private final Server server;
    private final Cache<Object, Double> cached_tps;
    private final Object TPS_KEY;

    TPSCache(Server server, long checkDelayMillis) {
        this.server = server;
        this.cached_tps = Caffeine.newBuilder().expireAfterWrite(Duration.ofMillis(checkDelayMillis)).build();
        this.TPS_KEY = new Object(); // Dummy value to associate with tps in the backing Cache
    }

    public static TPSCache create(long checkDelayMillis) {
        return new TPSCache(AnarchyExploitFixes.getInstance().getServer(), checkDelayMillis);
    }

    public double getTPS() {
        Double tps = this.cached_tps.getIfPresent(this.TPS_KEY);
        if (tps == null) {
            tps = this.server.getTPS()[0];
            this.cached_tps.put(this.TPS_KEY, tps);
        }
        return tps;
    }
}