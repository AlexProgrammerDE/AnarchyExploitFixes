package me.moomoo.anarchyexploitfixes.modules.misc;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.common.AEFModule;
import me.moomoo.anarchyexploitfixes.config.Config;
import org.bukkit.ChatColor;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerKickEvent;

import java.util.HashSet;
import java.util.List;

public class PreventMessageKick implements AEFModule, Listener {

    private final HashSet<String> kickMessagesToListenTo = new HashSet<>();

    public PreventMessageKick() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("misc.kicks.prevent-message-kick.enable", "Cancels the kick for specific kick messages.");
        config.getList("misc.kicks.prevent-message-kick.kick-messages-to-listen-to",
                List.of("Kicked for spamming", "Stop spamming!")
        ).forEach(configuredMsg -> this.kickMessagesToListenTo.add(configuredMsg.toLowerCase()));
    }

    @Override
    public String name() {
        return "prevent-spam-kick";
    }

    @Override
    public String category() {
        return "misc";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("misc.kicks.prevent-message-kick.enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerKick(PlayerKickEvent event) {
        if (kickMessagesToListenTo.contains(ChatColor.stripColor(event.getReason()))) {
            event.setCancelled(true);
        }
    }
}
