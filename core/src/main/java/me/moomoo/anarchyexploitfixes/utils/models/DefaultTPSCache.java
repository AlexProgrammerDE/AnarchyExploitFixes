package me.moomoo.anarchyexploitfixes.utils.models;

import com.github.benmanes.caffeine.cache.Cache;
import com.github.benmanes.caffeine.cache.Caffeine;
import me.moomoo.anarchyexploitfixes.common.TPSCache;
import org.bukkit.Location;
import org.bukkit.Server;
import org.bukkit.World;
import org.bukkit.plugin.java.JavaPlugin;

import java.time.Duration;

public class DefaultTPSCache implements TPSCache {
    private final Server server;
    private final Cache<Object, Double> cached_tps;
    private final Object TPS_KEY;

    public DefaultTPSCache(JavaPlugin plugin, long checkDelayMillis) {
        this.server = plugin.getServer();
        this.cached_tps = Caffeine.newBuilder().expireAfterWrite(Duration.ofMillis(checkDelayMillis)).build();
        this.TPS_KEY = new Object(); // Dummy value to associate with tps in the backing Cache
    }

    @Override
    public double getGlobalTPS() {
        Double tps = this.cached_tps.getIfPresent(this.TPS_KEY);
        if (tps == null) {
            tps = this.server.getTPS()[0];
            this.cached_tps.put(this.TPS_KEY, tps);
        }
        return tps;
    }

    @Override
    public double getTPS(World world, int chunkX, int chunkZ) {
        return getGlobalTPS();
    }

    @Override
    public double getTPS(Location location) {
        return getGlobalTPS();
    }
}
