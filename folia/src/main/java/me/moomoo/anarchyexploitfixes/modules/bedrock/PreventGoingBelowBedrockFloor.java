package me.moomoo.anarchyexploitfixes.modules.bedrock;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtil;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerMoveEvent;

import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;

public class PreventGoingBelowBedrockFloor implements AnarchyExploitFixesModule, Listener {

    private final HashSet<String> exemptedWorlds = new HashSet<>();
    private final Material fillMaterial;

    public PreventGoingBelowBedrockFloor() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("bedrock.prevent-going-below-bedrock-floor.enable", "Fills the bedrock hole and teleports player above.");
        this.exemptedWorlds.addAll(config.getList("bedrock.prevent-going-below-bedrock-floor.exempted-worlds", List.of("world_the_end", "skyblock_world")));
        String configuredFillMaterial = config.getString("bedrock.prevent-going-below-bedrock-floor.filler-material", "BEDROCK");
        Material filler_material = Material.BEDROCK;
        try {
            filler_material = Material.valueOf(configuredFillMaterial);
        } catch (IllegalArgumentException e) {
            LogUtil.materialNotRecognized(Level.WARNING, name(), configuredFillMaterial);
        }
        this.fillMaterial = filler_material;
    }

    @Override
    public String name() {
        return "prevent-going-below-bedrock-floor";
    }

    @Override
    public String category() {
        return "bedrock";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("bedrock.prevent-going-below-bedrock-floor.enable", true);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerMove(PlayerMoveEvent event) {
        Player player = event.getPlayer();
        if (exemptedWorlds.contains(player.getWorld().getName())) return;

        World world = player.getWorld();
        Location playerLoc = player.getLocation();

        if (playerLoc.getY() < world.getMinHeight()) {
            // place bedrock at the min world height
            world.getBlockAt(playerLoc.getBlockX(), world.getMinHeight(), playerLoc.getBlockZ()).setType(fillMaterial);
            // teleport player on top of that bedrock
            event.setTo(event.getFrom().add(0, 2, 0));
        }
    }
}
